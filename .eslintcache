[{"/Users/jeffrey/Documents/GitHub/Frespo2/src/index.tsx":"1","/Users/jeffrey/Documents/GitHub/Frespo2/src/App.tsx":"2","/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/getFeed.ts":"3","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/FormFeed.tsx":"4","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Banner.tsx":"5","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Feed.tsx":"6","/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/postFeed.ts":"7","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/banner/Icon.tsx":"8","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/FeedItem.tsx":"9","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/Header.tsx":"10","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/About.tsx":"11"},{"size":503,"mtime":1612513884717,"results":"12","hashOfConfig":"13"},{"size":1299,"mtime":1612515760968,"results":"14","hashOfConfig":"13"},{"size":420,"mtime":1612512489540,"results":"15","hashOfConfig":"13"},{"size":1391,"mtime":1611031659686,"results":"16","hashOfConfig":"13"},{"size":2988,"mtime":1612517097259,"results":"17","hashOfConfig":"13"},{"size":923,"mtime":1611564951970,"results":"18","hashOfConfig":"13"},{"size":402,"mtime":1611029734889,"results":"19","hashOfConfig":"13"},{"size":268,"mtime":1612516985282,"results":"20","hashOfConfig":"13"},{"size":444,"mtime":1611565061666,"results":"21","hashOfConfig":"13"},{"size":256,"mtime":1611562591422,"results":"22","hashOfConfig":"13"},{"size":503,"mtime":1612516047817,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7cce2z",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/jeffrey/Documents/GitHub/Frespo2/src/index.tsx",[],["50","51"],"/Users/jeffrey/Documents/GitHub/Frespo2/src/App.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/getFeed.ts",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/FormFeed.tsx",["52"],"import React, {useState} from 'react'\n\nimport postFeed from '../getpost/postFeed'\n\nconst FormFeed = () => {\n    const [title, setTitle] = useState<string>('');\n    const [content, setContent] = useState<string>('');\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>, field: string) => {\n        switch (field) {\n            case 'title':\n                setTitle(e.target.value);\n                break;\n            \n            case 'content':\n                setContent(e.target.value);\n                break;\n        }\n    }\n\n    const handleSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // lol i need some form validation\n        const res = await postFeed(title, content);\n    }\n\n    return (\n        <form className='FormFeed' onSubmit={handleSubmit}>\n            Title: <input\n                    type='text'\n                    name='title'\n                    value={title}\n                    onChange={e => {handleChange(e, 'title')}}\n                    required/>\n\n            Content:    <input\n                        type=\"text\"\n                        name=\"content\"\n                        value={content}\n                        onChange={e => {handleChange(e, 'content')}}\n                        required/>\n\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default FormFeed;","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Banner.tsx",["53"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Icon from './banner/Icon'\n\nimport './banner/Banner.scss'\n\nimport logo from '../img/favicon.png'\n\ninterface Props {\n    name: string\n}\n\nconst setHref = (href: string) => {\n    return () => {\n        document.location.href = href;\n    }\n}\n\nconst Banner: React.FC<Props> = ({name}) => {\n    const [hovered, setHovered] = useState<string>(\"\");\n    const [styleString, setStyleString] = useState<string>(\"\");\n\n    const hoverOff = () => {\n        setHovered(\"\");\n    }\n\n    useEffect(() => {\n        let newStyleString: string = \"\";\n        [\"POST\", \"ABOUT\"].forEach((name: string) => {\n            newStyleString += `#${name}BTN {fill: ${hovered !== name && hovered !== \"\" ? \"gray\" : \"auto\"};}\\n`;\n        })\n        setStyleString(newStyleString);\n    }, [hovered]);\n\n    return (\n        <>\n            <style jsx>{`\n                ${styleString}\n            `}</style>\n\n            <div className='Banner'>\n                <Link to='/home'>\n                    <Icon src={logo}/>\n                </Link>\n\n                <h1>{name}</h1>\n\n                <div style={{flexGrow: 1}}></div>\n\n                <Link to='/post'>\n                    <svg id=\"POSTBTN\" onMouseOver={() => {setHovered(\"POST\")}} onMouseLeave={hoverOff} className=\"bi bi-plus-square\" width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\n                        <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\n                        <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                    </svg>\n                </Link>\n\n                <Link to='/about'>\n                    <svg id=\"ABOUTBTN\" onMouseOver={() => {setHovered(\"ABOUT\")}} onMouseLeave={hoverOff} className=\"bi bi-question-square\" width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                        <path d=\"M5.25 6.033h1.32c0-.781.458-1.384 1.36-1.384.685 0 1.313.343 1.313 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.007.463h1.307v-.355c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.326 0-2.786.647-2.754 2.533zm1.562 5.516c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z\"/>\n                    </svg> \n                </Link>\n            </div>\n        </>\n    );\n}\n\nexport default Banner;","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Feed.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/postFeed.ts",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/banner/Icon.tsx",[],["54","55"],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/FeedItem.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/Header.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/About.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":25,"column":15,"nodeType":"62","messageId":"63","endLine":25,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":13,"column":7,"nodeType":"62","messageId":"63","endLine":13,"endColumn":14},{"ruleId":"56","replacedBy":"65"},{"ruleId":"58","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'setHref' is assigned a value but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]