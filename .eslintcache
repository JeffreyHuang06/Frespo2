[{"/Users/jeffrey/Documents/GitHub/Frespo2/src/index.tsx":"1","/Users/jeffrey/Documents/GitHub/Frespo2/src/App.tsx":"2","/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/getFeed.ts":"3","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/FormFeed.tsx":"4","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Banner.tsx":"5","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Feed.tsx":"6","/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/postFeed.ts":"7","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/banner/Icon.tsx":"8","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/FeedItem.tsx":"9","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/Header.tsx":"10"},{"size":481,"mtime":1611026016712,"results":"11","hashOfConfig":"12"},{"size":529,"mtime":1611563850111,"results":"13","hashOfConfig":"12"},{"size":420,"mtime":1612163735345,"results":"14","hashOfConfig":"12"},{"size":1391,"mtime":1611031659686,"results":"15","hashOfConfig":"12"},{"size":2593,"mtime":1612247225156,"results":"16","hashOfConfig":"12"},{"size":923,"mtime":1611564951970,"results":"17","hashOfConfig":"12"},{"size":402,"mtime":1611029734889,"results":"18","hashOfConfig":"12"},{"size":268,"mtime":1612205133725,"results":"19","hashOfConfig":"12"},{"size":444,"mtime":1611565061666,"results":"20","hashOfConfig":"12"},{"size":256,"mtime":1611562591422,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"7cce2z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/jeffrey/Documents/GitHub/Frespo2/src/index.tsx",[],["45","46"],"/Users/jeffrey/Documents/GitHub/Frespo2/src/App.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/getFeed.ts",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/FormFeed.tsx",["47"],"import React, {useState} from 'react'\n\nimport postFeed from '../getpost/postFeed'\n\nconst FormFeed = () => {\n    const [title, setTitle] = useState<string>('');\n    const [content, setContent] = useState<string>('');\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>, field: string) => {\n        switch (field) {\n            case 'title':\n                setTitle(e.target.value);\n                break;\n            \n            case 'content':\n                setContent(e.target.value);\n                break;\n        }\n    }\n\n    const handleSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // lol i need some form validation\n        const res = await postFeed(title, content);\n    }\n\n    return (\n        <form className='FormFeed' onSubmit={handleSubmit}>\n            Title: <input\n                    type='text'\n                    name='title'\n                    value={title}\n                    onChange={e => {handleChange(e, 'title')}}\n                    required/>\n\n            Content:    <input\n                        type=\"text\"\n                        name=\"content\"\n                        value={content}\n                        onChange={e => {handleChange(e, 'content')}}\n                        required/>\n\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default FormFeed;","/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Banner.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/Feed.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/getpost/postFeed.ts",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/banner/Icon.tsx",[],["48","49"],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/FeedItem.tsx",[],"/Users/jeffrey/Documents/GitHub/Frespo2/src/components/feed/Header.tsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":25,"column":15,"nodeType":"56","messageId":"57","endLine":25,"endColumn":18},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["60"],["61"],"no-global-assign","no-unsafe-negation"]